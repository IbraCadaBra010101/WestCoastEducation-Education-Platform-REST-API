// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WestCoastEducation.Data;

namespace WestCoastEducation.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210515093857_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<int>("CoursesId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.HasKey("CoursesId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("CourseStudent");
                });

            modelBuilder.Entity("WestCoastEducation.Entites.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AverageAttendance")
                        .HasColumnType("float");

                    b.Property<double>("AverageGrade")
                        .HasColumnType("float");

                    b.Property<string>("CourseInformation")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("CourseName")
                        .HasColumnType("VARCHAR(25)");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .HasColumnType("VARCHAR(25)");

                    b.HasKey("Id");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("WestCoastEducation.Entites.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("AverageAttendance")
                        .HasColumnType("SMALLINT");

                    b.Property<string>("City")
                        .HasColumnType("VARCHAR(12)");

                    b.Property<string>("Country")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("FirstName")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<bool>("IsEnrolledInSchool")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("PersonalNumber")
                        .HasColumnType("VARCHAR(12)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("VARCHAR(12)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("VARCHAR(12)");

                    b.Property<short>("StreetNumber")
                        .HasColumnType("SMALLINT");

                    b.HasKey("Id");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("WestCoastEducation.Entites.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WestCoastEducation.Entites.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
